Math functions

Addition (+): Adds two numeric values.
Subtraction (-): Subtracts one numeric value from another.
Multiplication (*): Multiplies two numeric values.
Division (/): Divides one numeric value by another.
Modulo (% or MOD()): Returns the remainder of a division operation

___________________________________________________________________

Joins and unions 

Bring together 2 data data structures 


join combines rows from 2 or more tables based on a column they have incommon

Things needed:

Primary Key - unique identifier for a row

Foregin key - a refrence from column to another in a different table

_________________________________________________________________________

How to do joins:

Task 1: Identify tables you want to join
Task 2: choose join type
Task 3: Specify the JOIN Condition:

we are not creating a new table 

Types of joins
  Inner
  Left
  Right
  Outer
________________________________________________________________________

First join:

select * from customer inner join payment
on customer.customer_id = payment.customer_id limit 10;


customer has the PK and payment has the FK

I am joining the customer onto the payment table

This query shows you the first 10 records of customers matched with their payments. Customers without payments are excluded.The tables arenâ€™t merged permanently.

The query joins them together on the fly to show you a combined view.
_________________________________________________________________________

join 2 tables film and inventory

film pk = film_id

invetory - fk film_id




select  film.film_id, 
		film.title,
		inventory_id 
		from film left outer join inventory on inventory.film_id = film.film_id
		
		where inventory.film_id is null order by film.film_id;

________________________________________________________________________

Union and Union all

The UNION operator is used to combine the result-set of two or more SELECT statements. but removed dups union all does not


Join the film to the film_actor table.

film - pk film_id
 Actor

select * from film  join film_actor on film.film_id = film_actor.film_id

Join the actor table to the film_actor table.

select * from film_actor  join film on film.film_id = film_actor.film_id

Join the actor, film_actor, and film tables together (multiple joins!).



What is the difference between UNION and UNION ALL and under what condition(s) would you use each version?

________________________________________________________________________________________________________

Join the film to the film_actor table.

film - pk film_id
 Actor

select * from film  join film_actor on film.film_id = film_actor.film_id

Join the actor table to the film_actor table.

select * from film_actor  join film on film.film_id = film_actor.film_id

Join the actor, film_actor, and film tables together (multiple joins!).

actor pk actor_id
film pk film_id
film_actor film_id actor_id

select * from film_actor as t1 inner join
film as t2 on t1.film_id = t2.film_id
inner join actor as t3 on t1.actor_id = t3.actor_id;


What is the difference between UNION and UNION ALL and under what condition(s) would you use each version?



